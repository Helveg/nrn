#=============================================================================
# Azure Pipeline NEURON settings
#=============================================================================
jobs:
#- job: 'NativeBuilds'
#  strategy:
#    matrix:
#      Python27-Ubuntu16:
#        python.version: '2.7'
#        image.name: 'ubuntu-16.04'
#      Python35-Ubuntu16:
#        python.version: '3.5'
#        image.name: 'ubuntu-16.04'
#      Python37-Ubuntu18:
#        python.version: '3.7'
#        image.name: 'ubuntu-18.04'
#      Python36-OSX14:
#        python.version: '3.6'
#        image.name: 'macOS-10.14'
#      Python38-OSX15:
#        python.version: '3.8'
#        image.name: 'macOS-10.15'
#  variables:
#     INSTALL_DIR: $(Agent.HomeDirectory)/install
#  pool:
#    vmImage: $(image.name)
#  steps:
#  - script: |
#      sudo apt update
#      sudo apt install -y flex bison doxygen libopenmpi-dev \
#                          libmpich-dev libx11-dev libxcomposite-dev \
#                          mpich openmpi-bin libncurses-dev
#    condition: eq(variables['agent.os'], 'Linux')
#    displayName: 'Install Linux System Depdendencies'
#  - script: |
#      brew cask install xquartz
#      brew install flex bison doxygen mpich
#      brew unlink mpich && brew install openmpi
#      echo $'[install]\nprefix='>$(Agent.HomeDirectory)/.pydistutils.cfg
#    condition: eq(variables['agent.os'], 'Darwin')
#    displayName: 'Install OSX System Depdendencies'
#  - template: azure-build.yml
#
#variables:
#  MANYLINUX_NRN_CONTAINER: neuronsimulator/neuron_wheel
#  MACOSX_DEPLOYMENT_TARGET: 10.9

  #- job: 'ManyLinuxWheels'
  #  pool:
  #    vmImage: 'ubuntu-18.04'
  #  steps:
  #  - script: |
  #      docker run --rm \
  #        -w /root/nrn \
  #        -v $PWD:/root/nrn \
  #        'neuronsimulator/neuron_wheel' \
  #        packaging/python/build_wheels.bash linux
  #    displayName: Building ManyLinux Wheels
  #  - script: |
  #      ls -lh wheelhouse/
  #    displayName: Show and copy wheels
  #
- job: 'MacOSWheels'
  pool:
    vmImage: 'macOS-10.15'
  steps:
  - checkout: self
    submodules: false
  - script: |
      brew cask install xquartz
      brew install flex bison mpich
      brew unlink mpich && brew install openmpi
    displayName: 'Install OSX System Depdendencies'
  - script: |
      set -e -x
      for version in '3.7.5' '3.8.0'
      do
        installer=python-${version}-macosx10.9.pkg
        url=https://www.python.org/ftp/python/$version/$installer
        curl $url > $installer
        sudo installer -pkg $installer -target /
      done
    displayName: 'Install Python from python.org'
  - script: |
      export MACOSX_DEPLOYMENT_TARGET=10.9
      export PATH=/usr/local/opt/flex/bin:/usr/local/opt/bison/bin:$PATH
      export SDKROOT=$(xcrun --sdk macosx --show-sdk-path)
      packaging/python/build_wheels.bash osx
    displayName: Building MacOS Wheels
  - script: |
      ls -lh wheelhouse/
    displayName: Show and copy wheels
